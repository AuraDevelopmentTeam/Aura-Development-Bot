apply from: "GradleCommon/common.gradle"

apply plugin: "application"

mainClassName = "dev.aura.aurabot.AuraBot"

ext {
    commonManifest = {
        attributes(
            "Main-Class": mainClassName,

            "Specification-Title": pluginName,
            "Specification-Version": version,
            "Specification-Vendor": "Aura Development Team",
            "Implementation-Title": pluginName,
            "Implementation-Version": version,
            "Implementation-Vendor": "Aura Development Team"
        )
    }

    runDir = "run"
}

repositories {
    // Additional repositories
}

dependencies {
    compile "net.dv8tion:JDA:${jda_version}"
    compile "com.jagrosh:jda-utilities-command:${jdaUtilitiesCommand_version}"

    compile "com.lmax:disruptor:${disruptor_version}"
    compile "commons-cli:commons-cli:${commonsCLI_version}"
    compile "org.apache.logging.log4j:log4j-core:${log4j_version}"
    compile "org.fusesource.jansi:jansi:${jansi_version}"

    runtime "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
}

tasks.withType(Jar) {
    manifest commonManifest
}

test {
    workingDir = runDir
    systemProperty "log4j.skipJansi", "true"

    doFirst {
        file(workingDir).mkdirs()
    }
}

run {
    workingDir = runDir

    if(project.hasProperty("args")) {
        args project.args.split()
    }

    doFirst {
        file(workingDir).mkdirs()
    }
}

artifacts {
    archives distZip
    archives distTar
}
